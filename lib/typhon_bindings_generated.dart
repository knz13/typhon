// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings for `c_sharp_interface/src/typhon.h`.
/// Regenerate bindings with `dart run ffigen --config ffigen.yaml`.
///
class TyphonBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  TyphonBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  TyphonBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int initializeCppLibrary() {
    return _initializeCppLibrary();
  }

  late final _initializeCppLibraryPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function()>>('initializeCppLibrary');
  late final _initializeCppLibrary =
      _initializeCppLibraryPtr.asFunction<int Function()>();

  /// Related to GameObject
  void attachCreateGameObjectFunction(
    CreateGameObjectFunc func,
  ) {
    return _attachCreateGameObjectFunction(
      func,
    );
  }

  late final _attachCreateGameObjectFunctionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CreateGameObjectFunc)>>(
          'attachCreateGameObjectFunction');
  late final _attachCreateGameObjectFunction =
      _attachCreateGameObjectFunctionPtr
          .asFunction<void Function(CreateGameObjectFunc)>();

  void attachRemoveGameObjectFunction(
    RemoveGameObjectFunc func,
  ) {
    return _attachRemoveGameObjectFunction(
      func,
    );
  }

  late final _attachRemoveGameObjectFunctionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RemoveGameObjectFunc)>>(
          'attachRemoveGameObjectFunction');
  late final _attachRemoveGameObjectFunction =
      _attachRemoveGameObjectFunctionPtr
          .asFunction<void Function(RemoveGameObjectFunc)>();

  RemoveObjectFunc attachOnRemoveObjectFunction() {
    return _attachOnRemoveObjectFunction();
  }

  late final _attachOnRemoveObjectFunctionPtr =
      _lookup<ffi.NativeFunction<RemoveObjectFunc Function()>>(
          'attachOnRemoveObjectFunction');
  late final _attachOnRemoveObjectFunction = _attachOnRemoveObjectFunctionPtr
      .asFunction<RemoveObjectFunc Function()>();

  FindFrameFunc attachFindFrameFunction() {
    return _attachFindFrameFunction();
  }

  late final _attachFindFrameFunctionPtr =
      _lookup<ffi.NativeFunction<FindFrameFunc Function()>>(
          'attachFindFrameFunction');
  late final _attachFindFrameFunction =
      _attachFindFrameFunctionPtr.asFunction<FindFrameFunc Function()>();

  AIFunc attachAIFunction() {
    return _attachAIFunction();
  }

  late final _attachAIFunctionPtr =
      _lookup<ffi.NativeFunction<AIFunc Function()>>('attachAIFunction');
  late final _attachAIFunction =
      _attachAIFunctionPtr.asFunction<AIFunc Function()>();

  SetDefaultsFunc attachSetDefaultsFunction() {
    return _attachSetDefaultsFunction();
  }

  late final _attachSetDefaultsFunctionPtr =
      _lookup<ffi.NativeFunction<SetDefaultsFunc Function()>>(
          'attachSetDefaultsFunction');
  late final _attachSetDefaultsFunction =
      _attachSetDefaultsFunctionPtr.asFunction<SetDefaultsFunc Function()>();

  UpdateFunc attachUpdateFunction() {
    return _attachUpdateFunction();
  }

  late final _attachUpdateFunctionPtr =
      _lookup<ffi.NativeFunction<UpdateFunc Function()>>(
          'attachUpdateFunction');
  late final _attachUpdateFunction =
      _attachUpdateFunctionPtr.asFunction<UpdateFunc Function()>();

  PreDrawFunc attachPreDrawFunction() {
    return _attachPreDrawFunction();
  }

  late final _attachPreDrawFunctionPtr =
      _lookup<ffi.NativeFunction<PreDrawFunc Function()>>(
          'attachPreDrawFunction');
  late final _attachPreDrawFunction =
      _attachPreDrawFunctionPtr.asFunction<PreDrawFunc Function()>();

  PostDrawFunc attachPostDrawFunction() {
    return _attachPostDrawFunction();
  }

  late final _attachPostDrawFunctionPtr =
      _lookup<ffi.NativeFunction<PostDrawFunc Function()>>(
          'attachPostDrawFunction');
  late final _attachPostDrawFunction =
      _attachPostDrawFunctionPtr.asFunction<PostDrawFunc Function()>();

  void attachScalePointerToGameObject(
    int id,
    ffi.Pointer<ffi.Double> scalePointerX,
    ffi.Pointer<ffi.Double> scalePointerY,
  ) {
    return _attachScalePointerToGameObject(
      id,
      scalePointerX,
      scalePointerY,
    );
  }

  late final _attachScalePointerToGameObjectPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Double>)>>('attachScalePointerToGameObject');
  late final _attachScalePointerToGameObject =
      _attachScalePointerToGameObjectPtr.asFunction<
          void Function(
              int, ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Double>)>();

  void attachPositionPointersToGameObject(
    int id,
    ffi.Pointer<ffi.Double> positionX,
    ffi.Pointer<ffi.Double> positionY,
  ) {
    return _attachPositionPointersToGameObject(
      id,
      positionX,
      positionY,
    );
  }

  late final _attachPositionPointersToGameObjectPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Double>)>>('attachPositionPointersToGameObject');
  late final _attachPositionPointersToGameObject =
      _attachPositionPointersToGameObjectPtr.asFunction<
          void Function(
              int, ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Double>)>();

  /// Related to Engine Menus
  ClassesArray getClassesToAddToHierarchyMenu() {
    return _getClassesToAddToHierarchyMenu();
  }

  late final _getClassesToAddToHierarchyMenuPtr =
      _lookup<ffi.NativeFunction<ClassesArray Function()>>(
          'getClassesToAddToHierarchyMenu');
  late final _getClassesToAddToHierarchyMenu =
      _getClassesToAddToHierarchyMenuPtr.asFunction<ClassesArray Function()>();

  void addGameObjectFromClassID(
    int id,
  ) {
    return _addGameObjectFromClassID(
      id,
    );
  }

  late final _addGameObjectFromClassIDPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'addGameObjectFromClassID');
  late final _addGameObjectFromClassID =
      _addGameObjectFromClassIDPtr.asFunction<void Function(int)>();
}

class ClassesArray extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> array;

  external ffi.Pointer<ffi.Pointer<ffi.Char>> stringArray;

  @ffi.Int64()
  external int stringArraySize;

  @ffi.Int64()
  external int size;
}

typedef CreateGameObjectFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Int64 Function()>>;
typedef RemoveGameObjectFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef RemoveObjectFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef FindFrameFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef AIFunc = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef SetDefaultsFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef UpdateFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Double)>>;
typedef PreDrawFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
typedef PostDrawFunc
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>;
